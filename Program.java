// Напишите приложение, которое будет запрашивать у пользователя следующие данные, разделенные пробелом:
// Фамилия Имя Отчество датарождения номертелефона пол

// Форматы данных:
// фамилия, имя, отчество - строки
// датарождения - строка формата dd.mm.yyyy
// номертелефона - целое беззнаковое число без форматирования
// пол - символ латиницей f или m.

// Приложение должно проверить введенные данные по количеству. Если количество не совпадает с требуемым, вернуть код ошибки, обработать его
// и показать пользователю сообщение, что он ввел меньше и больше данных, чем требуется.

// Приложение должно попытаться распарсить полученные значения и выделить из них требуемые параметры. Если форматы данных не совпадают, нужно бросить исключение, 
// соответствующее типу проблемы. Можно использовать встроенные типы java и создать свои. Исключение должно быть корректно обработано, пользователю выведено сообщение с информацией,
//  что именно неверно.

// Если всё введено и обработано верно, должен создаться файл с названием, равным фамилии, в него в одну строку должны записаться полученные данные, вида

// <Фамилия><Имя><Отчество><датарождения> <номертелефона><пол>

// Однофамильцы должны записаться в один и тот же файл, в отдельные строки.

// Не забудьте закрыть соединение с файлом.

// При возникновении проблемы с чтением-записью в файл, исключение должно быть корректно обработано, пользователь должен увидеть стектрейс ошибки.

// Критерии оценивания:
// Слушатель напишите приложение, которое будет запрашивать у пользователя следующие данные, разделенные пробелом.
// ------------------ Пример: петров петр петрович 28.11.1992 9228372211 m ------------------

import java.util.Scanner;

public class Program {

    public static void main(String[] args) throws LessMyCountExaption, MoreMyCountExaption{
        Scanner iScanner = new Scanner(System.in, "Cp866");
        System.out.println("список команд: add-добавить данные, exit-завершить программу.");
        do{
            System.out.println("введите команду");
            String command = iScanner.nextLine().toLowerCase();
            if (command.equals("add")){
                System.out.println("введите данные:");
                String userData = iScanner.nextLine().toLowerCase();
                String[] ArrParse = ParserDate.dateParse(userData);
                if (Instruments.CoutnOfArray(ArrParse) < 6){
                    throw new LessMyCountExaption();
                }
                if (Instruments.CoutnOfArray(ArrParse) > 6){
                    throw new MoreMyCountExaption();
                }               
                if (Instruments.CheckData(ArrParse) == false){
                    continue;
                }else{
                    RedactFile.WrFile(ArrParse[0], userData);
                }
            }else{
                if (command.equals("exit")) {
                    System.out.println("Программа завершила работу.");
                    break;
                }else{
                    System.out.println("введена некорректная команда! Введите команду add или exit!");
                }
            }
        }
        while (true);
            }
}
    
